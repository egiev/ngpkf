services:
  postgres:
    restart: always
    image: postgres:latest
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_NAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5433:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mongo:
    restart: always
    # image: bitnami/mongodb:latest
    image: bitnami/mongodb:5.0
    container_name: mongo
    # user: root
    volumes:
      - mongo_data:/bitnami/mongodb
    environment:
      MONGODB_ADVERTISED_HOSTNAME: mongo
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_REPLICA_SET_KEY: asdfsfss
      # MONGODB_REPLICA_SET_MODE: primary
      # MONGODB_REPLICA_SET_KEY: 123456
      # ALLOW_EMPTY_PASSWORD: yes
      MONGODB_ROOT_PASSWORD: root
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: ba9976f1b687d5881d2100d3b468b5f9493b72ec
      MONGODB_DATABASE: online-results
    ports:
      - 27017:27017

  backend:
    restart: always
    image: node:22.14.0
    container_name: backend
    working_dir: /usr/src/app
    env_file:
      - .env
    ports:
      - '80:3000'
    depends_on:
      - postgres
      - mongo
      - broker
    volumes:
      - ./:/usr/src/app/
    command: bash -c "npm install && npm run start:dev"

  broker:
    restart: always
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONTROLLER://broker:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'

  pgadmin:
    restart: always
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      CHECK_EMAIL_DELIVERABILITY: ${CHECK_EMAIL_DELIVERABILITY}
    ports:
      - '5050:80'
    depends_on:
      - postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin

volumes:
  postgres-data:

  mongo_data:

  pgadmin-data:
